{"version":3,"file":"cubejs-client-react.umd.js","sources":["../src/CubeContext.js","../src/QueryRenderer.jsx","../src/QueryRendererWithTotals.jsx","../src/utils.js","../src/QueryBuilder.jsx","../src/CubeProvider.jsx","../src/hooks/deep-compare-memoize.js","../src/hooks/is-mounted.js","../src/hooks/cube-fetch.js","../src/hooks/cube-sql.js","../src/hooks/dry-run.js","../src/hooks/lazy-dry-run.js","../src/hooks/cube-query.js","../src/hooks/cube-meta.js"],"sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);\n","import React from 'react';\nimport { equals, toPairs, fromPairs } from 'ramda';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from './CubeContext';\n\nexport default class QueryRenderer extends React.Component {\n  static contextType = CubeContext;\n\n  static defaultProps = {\n    cubeApi: null,\n    query: null,\n    render: null,\n    queries: null,\n    loadSql: null,\n    updateOnlyOnStateChange: false,\n    resetResultSetOnChange: true\n  };\n\n  // @deprecated use `isQueryPresent` from `@cubejs-client/core`\n  static isQueryPresent(query) {\n    return isQueryPresent(query);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.mutexObj = {};\n  }\n\n  componentDidMount() {\n    const { query, queries } = this.props;\n    if (query) {\n      this.load(query);\n    }\n    if (queries) {\n      this.loadQueries(queries);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      query, queries, render, cubeApi, loadSql, updateOnlyOnStateChange\n    } = this.props;\n    if (!updateOnlyOnStateChange) {\n      return true;\n    }\n    return !equals(nextProps.query, query)\n      || !equals(nextProps.queries, queries)\n      || ((nextProps.render == null || render == null) && nextProps.render !== render)\n      || nextProps.cubeApi !== cubeApi\n      || nextProps.loadSql !== loadSql\n      || !equals(nextState, this.state)\n      || nextProps.updateOnlyOnStateChange !== updateOnlyOnStateChange;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, queries } = this.props;\n    if (!equals(prevProps.query, query)) {\n      this.load(query);\n    }\n\n    if (!equals(prevProps.queries, queries)) {\n      this.loadQueries(queries);\n    }\n  }\n\n  cubeApi() {\n    // eslint-disable-next-line react/destructuring-assignment\n    return this.props.cubeApi || this.context && this.context.cubeApi;\n  }\n\n  load(query) {\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      error: null,\n      sqlQuery: null,\n      ...(resetResultSetOnChange ? { resultSet: null } : {})\n    });\n    const { loadSql } = this.props;\n    const cubeApi = this.cubeApi();\n\n    if (query && isQueryPresent(query)) {\n      if (loadSql === 'only') {\n        cubeApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' })\n          .then(sqlQuery => this.setState({ sqlQuery, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else if (loadSql) {\n        Promise.all([\n          cubeApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' }),\n          cubeApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n        ]).then(([sqlQuery, resultSet]) => this.setState({\n          sqlQuery, resultSet, error: null, isLoading: false\n        }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else {\n        cubeApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n          .then(resultSet => this.setState({ resultSet, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      }\n    }\n  }\n\n  loadQueries(queries) {\n    const cubeApi = this.cubeApi();\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      ...(resetResultSetOnChange ? { resultSet: null } : {}),\n      error: null\n    });\n\n    const resultPromises = Promise.all(toPairs(queries).map(\n      ([name, query]) => cubeApi.load(query, { mutexObj: this.mutexObj, mutexKey: name }).then(r => [name, r])\n    ));\n\n    resultPromises\n      .then(resultSet => this.setState({\n        resultSet: fromPairs(resultSet),\n        error: null,\n        isLoading: false\n      }))\n      .catch(error => this.setState({\n        ...(resetResultSetOnChange ? { resultSet: null } : {}),\n        error,\n        isLoading: false\n      }));\n  }\n\n  render() {\n    const {\n      error, queries, resultSet, isLoading, sqlQuery\n    } = this.state;\n    const { render } = this.props;\n\n    const loadState = {\n      error: error ? new Error(error.response?.plainError || error.message || error.toString()) : null,\n      resultSet: queries ? (resultSet || {}) : resultSet,\n      loadingState: { isLoading },\n      sqlQuery\n    };\n\n    if (render) {\n      return render(loadState);\n    }\n\n    return null;\n  }\n}\n","import React from 'react';\nimport QueryRenderer from './QueryRenderer.jsx';\n\nconst QueryRendererWithTotals = ({ query, ...restProps }) => (\n  <QueryRenderer\n    queries={{\n      totals: {\n        ...query,\n        dimensions: [],\n        timeDimensions: query.timeDimensions\n          ? query.timeDimensions.map(td => ({ ...td, granularity: null }))\n          : undefined\n      },\n      main: query\n    }}\n    {...restProps}\n  />\n);\n\nexport default QueryRendererWithTotals;\n","export function removeEmpty(obj) {\n  if (Array.isArray(obj) || typeof obj !== 'object') {\n    return obj;\n  }\n\n  return Object.fromEntries(\n    Object.entries(obj)\n      .filter(([, v]) => v != null)\n      .map(([k, v]) => {\n        if (Array.isArray(v)) {\n          return [k, v.map(removeEmpty)];\n        }\n\n        return [k, typeof v === 'object' ? removeEmpty(v) : v];\n      })\n  );\n}\n","import React from 'react';\nimport { clone, equals, indexBy, pick, prop, uniq, uniqBy } from 'ramda';\nimport {\n  defaultHeuristics,\n  defaultOrder,\n  flattenFilters,\n  getQueryMembers,\n  isQueryPresent,\n  moveItemInArray,\n  movePivotItem,\n  validateQuery,\n  ResultSet,\n  removeEmptyQueryFields\n} from '@cubejs-client/core';\n\nimport QueryRenderer from './QueryRenderer.jsx';\nimport CubeContext from './CubeContext';\nimport { removeEmpty } from './utils';\n\nconst granularities = [\n  { name: undefined, title: 'w/o grouping' },\n  { name: 'second', title: 'Second' },\n  { name: 'minute', title: 'Minute' },\n  { name: 'hour', title: 'Hour' },\n  { name: 'day', title: 'Day' },\n  { name: 'week', title: 'Week' },\n  { name: 'month', title: 'Month' },\n  { name: 'quarter', title: 'Quarter' },\n  { name: 'year', title: 'Year' },\n];\n\nexport default class QueryBuilder extends React.Component {\n  static contextType = CubeContext;\n\n  static defaultProps = {\n    cubeApi: null,\n    stateChangeHeuristics: null,\n    disableHeuristics: false,\n    render: null,\n    wrapWithQueryRenderer: true,\n    defaultChartType: 'line',\n    defaultQuery: {},\n    initialVizState: null,\n    onVizStateChanged: null,\n\n    // deprecated\n    query: null,\n    setQuery: null,\n    vizState: null,\n    setVizState: null,\n  };\n\n  // This is an anti-pattern, only kept for backward compatibility\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#anti-pattern-unconditionally-copying-props-to-state\n  static getDerivedStateFromProps(props, state) {\n    if (props.query || props.vizState) {\n      const nextState = {\n        ...state,\n        ...(props.vizState || {}),\n      };\n\n      if (Array.isArray(props.query)) {\n        throw new Error('Array of queries is not supported.');\n      }\n\n      return {\n        ...nextState,\n        query: {\n          ...nextState.query,\n          ...(props.query || {}),\n        },\n      };\n    }\n    return null;\n  }\n\n  static resolveMember(type, { meta, query }) {\n    if (!meta) {\n      return [];\n    }\n\n    if (Array.isArray(query)) {\n      return query.reduce(\n        (memo, currentQuery) => memo.concat(\n          QueryBuilder.resolveMember(type, {\n            meta,\n            query: currentQuery,\n          })\n        ),\n        []\n      );\n    }\n\n    if (type === 'timeDimensions') {\n      return (query.timeDimensions || []).map((m, index) => ({\n        ...m,\n        dimension: {\n          ...meta.resolveMember(m.dimension, 'dimensions'),\n          granularities,\n        },\n        index,\n      }));\n    }\n\n    return (query[type] || []).map((m, index) => ({\n      index,\n      ...meta.resolveMember(m, type),\n    }));\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: props.defaultQuery || props.query,\n      chartType: props.defaultChartType,\n      validatedQuery: props.query, // deprecated, validatedQuery should not be set until after dry-run for safety\n      missingMembers: [],\n      // todo: rename to `isMetaReady`\n      isFetchingMeta: true,\n      dryRunResponse: null,\n      ...props.vizState, // deprecated\n      ...props.initialVizState,\n    };\n\n    this.mutexObj = {};\n    this.orderMembersOrderKeys = [];\n  }\n\n  async componentDidMount() {\n    this.prevContext = this.context;\n    await this.fetchMeta();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { schemaVersion, onSchemaChange } = this.props;\n    const { meta } = this.state;\n\n    if (this.prevContext?.cubeApi !== this.context?.cubeApi) {\n      this.prevContext = this.context;\n      await this.fetchMeta();\n    }\n\n    if (prevProps.schemaVersion !== schemaVersion) {\n      try {\n        const newMeta = await this.cubeApi().meta();\n        if (!equals(newMeta, meta) && typeof onSchemaChange === 'function') {\n          onSchemaChange({\n            schemaVersion,\n            refresh: async () => {\n              await this.fetchMeta();\n            },\n          });\n        }\n      } catch (error) {\n        // eslint-disable-next-line\n        this.setState({ metaError: error });\n      }\n    }\n  }\n\n  fetchMeta = async () => {\n    if (!this.cubeApi()) {\n      return;\n    }\n\n    let meta;\n    let metaError = null;\n    let richMetaError = null;\n    let metaErrorStack = null;\n\n    try {\n      this.setState({ isFetchingMeta: true });\n      meta = await this.cubeApi().meta();\n    } catch (error) {\n      metaError = error.response?.plainError || error;\n      richMetaError = error;\n      metaErrorStack = error.response?.stack?.replace(error.message || '', '') || '';\n    }\n\n    this.setState(\n      {\n        meta,\n        metaError: metaError ? new Error(metaError.message || metaError.toString()) : null,\n        richMetaError,\n        metaErrorStack,\n        isFetchingMeta: false,\n      },\n      () => {\n        // Run update query to force viz state update\n        // This will catch any new missing members, and also validate the query against the new meta\n        this.updateQuery({});\n      }\n    );\n  };\n\n  cubeApi() {\n    const { cubeApi } = this.props;\n    // eslint-disable-next-line react/destructuring-assignment\n    return cubeApi || (this.context && this.context.cubeApi);\n  }\n\n  getMissingMembers(query, meta) {\n    if (!meta) {\n      return [];\n    }\n\n    return getQueryMembers(query)\n      .map((member) => {\n        const resolvedMember = meta.resolveMember(member, ['measures', 'dimensions', 'segments']);\n        if (resolvedMember.error) {\n          return member;\n        }\n        return false;\n      })\n      .filter(Boolean);\n  }\n\n  isQueryPresent() {\n    const { query } = this.state;\n    return QueryRenderer.isQueryPresent(query);\n  }\n\n  prepareRenderProps(queryRendererProps) {\n    const getName = (member) => member.name;\n\n    const toTimeDimension = (member) => {\n      const rangeSelection = member.compareDateRange\n        ? { compareDateRange: member.compareDateRange }\n        : { dateRange: member.dateRange };\n\n      return removeEmpty({\n        dimension: member.dimension.name,\n        granularity: member.granularity,\n        ...rangeSelection,\n      });\n    };\n\n    const toFilter = (member) => ({\n      member: member.member?.name || member.dimension?.name,\n      operator: member.operator,\n      ...(['set', 'notSet'].includes(member.operator) ? {} : { values: member.values }),\n    });\n\n    const updateMethods = (memberType, toQuery = getName) => ({\n      add: (member) => {\n        const { query } = this.state;\n        this.updateQuery({\n          [memberType]: (query[memberType] || []).concat(toQuery(member)),\n        });\n      },\n      remove: (member) => {\n        const { query } = this.state;\n\n        return this.updateQuery({\n          [memberType]: (query[memberType] || []).filter((_, index) => index !== member.index),\n        });\n      },\n      update: (member, updateWith) => {\n        const { query } = this.state;\n        const members = (query[memberType] || []).concat([]);\n        members.splice(member.index, 1, toQuery(updateWith));\n        return this.updateQuery({\n          [memberType]: members,\n        });\n      },\n    });\n\n    const {\n      meta,\n      metaError,\n      richMetaError,\n      query,\n      queryError,\n      chartType,\n      pivotConfig,\n      validatedQuery,\n      missingMembers,\n      isFetchingMeta,\n      dryRunResponse,\n      metaErrorStack\n    } = this.state;\n\n    const flatFilters = uniqBy((filter) => `${prop('member', filter)}${prop('operator', filter)}`,\n      flattenFilters((meta && query.filters) || []).map((filter) => ({\n        ...filter,\n        member: filter.member || filter.dimension,\n      })));\n\n    const filters = flatFilters.map((m, i) => ({\n      ...m,\n      dimension: meta.resolveMember(m.member || m.dimension, ['dimensions', 'measures']),\n      operators: meta.filterOperatorsForMember(m.member || m.dimension, ['dimensions', 'measures']),\n      index: i,\n    }));\n\n    const measures = QueryBuilder.resolveMember('measures', this.state);\n    const dimensions = QueryBuilder.resolveMember('dimensions', this.state);\n    const timeDimensions = QueryBuilder.resolveMember('timeDimensions', this.state);\n    const segments = ((meta && query.segments) || []).map((m, i) => ({\n      index: i,\n      ...meta.resolveMember(m, 'segments'),\n    }));\n\n    let availableMeasures = [];\n    let availableDimensions = [];\n    let availableSegments = [];\n    let availableFilterMembers = [];\n\n    const availableMembers = meta?.membersGroupedByCube() || {\n      measures: [],\n      dimensions: [],\n      segments: [],\n      timeDimensions: [],\n    };\n\n    if (meta) {\n      availableMeasures = meta.membersForQuery(query, 'measures');\n      availableDimensions = meta.membersForQuery(query, 'dimensions');\n      availableSegments = meta.membersForQuery(query, 'segments');\n\n      const indexedMeasures = indexBy(prop('cubeName'), availableMembers.measures);\n      const indexedDimensions = indexBy(prop('cubeName'), availableMembers.dimensions);\n      const cubeNames = uniq([...Object.keys(indexedMeasures), ...Object.keys(indexedDimensions)]).sort();\n\n      availableFilterMembers = cubeNames.map((name) => {\n        const cube = indexedMeasures[name] || indexedDimensions[name];\n\n        return {\n          ...cube,\n          members: [\n            ...indexedMeasures[name]?.members,\n            ...indexedDimensions[name]?.members\n          ].sort((a, b) => (a.shortTitle > b.shortTitle ? 1 : -1)),\n        };\n      });\n    }\n\n    const activeOrder = Array.isArray(query.order) ? Object.fromEntries(query.order) : query.order;\n    const members = [\n      ...measures,\n      ...dimensions,\n      ...timeDimensions.map(({ dimension }) => dimension)\n    ];\n\n    let orderMembers = uniqBy(prop('id'), [\n      // uniqBy prefers first, so these will only be added if not already in the query\n      ...members.map(({ name, title }) => ({ id: name, title, order: activeOrder?.[name] || 'none' })),\n    ]);\n\n    if (this.orderMembersOrderKeys.length !== orderMembers.length) {\n      this.orderMembersOrderKeys = orderMembers.map(({ id }) => id);\n    }\n\n    if (this.orderMembersOrderKeys.length) {\n      // Preserve order until the members change or manually re-ordered\n      // This is needed so that when an order member becomes active, it doesn't jump to the top of the list\n      orderMembers = (this.orderMembersOrderKeys || [])\n        .map((id) => orderMembers.find((member) => member.id === id))\n        .filter(Boolean);\n    }\n\n    return {\n      meta,\n      metaError,\n      richMetaError,\n      metaErrorStack,\n      query,\n      error: queryError, // Match same name as QueryRenderer prop\n      validatedQuery,\n      isQueryPresent: this.isQueryPresent(),\n      chartType,\n      measures,\n      dimensions,\n      timeDimensions,\n      segments,\n      filters,\n      orderMembers,\n      availableMeasures,\n      availableDimensions,\n      availableTimeDimensions: availableDimensions.filter((m) => m.type === 'time'),\n      availableSegments,\n      availableMembers,\n      availableFilterMembers,\n      updateQuery: (queryUpdate) => this.updateQuery(queryUpdate),\n      updateMeasures: updateMethods('measures'),\n      updateDimensions: updateMethods('dimensions'),\n      updateSegments: updateMethods('segments'),\n      updateTimeDimensions: updateMethods('timeDimensions', toTimeDimension),\n      updateFilters: updateMethods('filters', toFilter),\n      updateChartType: (newChartType) => this.updateVizState({ chartType: newChartType }),\n      updateOrder: {\n        set: (memberId, newOrder = 'asc') => {\n          this.updateQuery({\n            order: orderMembers\n              .map((orderMember) => ({\n                ...orderMember,\n                order: orderMember.id === memberId ? newOrder : orderMember.order,\n              }))\n              .reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n        update: (order) => {\n          this.updateQuery({\n            order,\n          });\n        },\n        reorder: (sourceIndex, destinationIndex) => {\n          if (sourceIndex == null || destinationIndex == null) {\n            return;\n          }\n\n          const nextArray = moveItemInArray(orderMembers, sourceIndex, destinationIndex);\n          this.orderMembersOrderKeys = nextArray.map(({ id }) => id);\n\n          this.updateQuery({\n            order: nextArray.reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n      },\n      pivotConfig,\n      updatePivotConfig: {\n        moveItem: ({ sourceIndex, destinationIndex, sourceAxis, destinationAxis }) => {\n          this.updateVizState({\n            pivotConfig: movePivotItem(pivotConfig, sourceIndex, destinationIndex, sourceAxis, destinationAxis),\n          });\n        },\n        update: (config) => {\n          const { limit } = config;\n\n          this.updateVizState({\n            pivotConfig: {\n              ...pivotConfig,\n              ...config,\n            },\n            ...(limit ? { query: { ...query, limit } } : null),\n          });\n        },\n      },\n      missingMembers,\n      refresh: this.fetchMeta,\n      isFetchingMeta,\n      dryRunResponse,\n      ...queryRendererProps,\n    };\n  }\n\n  updateQuery(queryUpdate) {\n    const { query } = this.state;\n\n    this.updateVizState({\n      query: removeEmptyQueryFields({\n        ...query,\n        ...queryUpdate,\n      }),\n    });\n  }\n\n  async updateVizState(state) {\n    const { setQuery, setVizState } = this.props;\n    const { query: stateQuery, pivotConfig: statePivotConfig, chartType, meta } = this.state;\n\n    const finalState = this.applyStateChangeHeuristics(state);\n    if (!finalState.query) {\n      finalState.query = { ...stateQuery };\n    }\n\n    let vizStateSent = null;\n    const handleVizStateChange = (currentState) => {\n      const { onVizStateChanged } = this.props;\n      if (onVizStateChanged) {\n        const newVizState = pick(['chartType', 'pivotConfig', 'query'], currentState);\n        // Don't run callbacks more than once unless the viz state has changed since last time\n        if (!vizStateSent || !equals(vizStateSent, newVizState)) {\n          onVizStateChanged(newVizState);\n          // use clone to make sure we don't save object references\n          vizStateSent = clone(newVizState);\n        }\n      }\n    };\n\n    // deprecated, setters replaced by onVizStateChanged\n    const runSetters = (currentState) => {\n      if (setVizState) {\n        setVizState(pick(['chartType', 'pivotConfig', 'query'], currentState));\n      }\n      if (currentState.query && setQuery) {\n        setQuery(currentState.query);\n      }\n    };\n\n    if (finalState.shouldApplyHeuristicOrder) {\n      finalState.query.order = defaultOrder(finalState.query);\n    }\n\n    finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(\n      finalState.query,\n      finalState.pivotConfig !== undefined ? finalState.pivotConfig : statePivotConfig\n    );\n\n    finalState.missingMembers = this.getMissingMembers(finalState.query, meta);\n    finalState.chartType = finalState.chartType || state.chartType || chartType;\n\n    // deprecated\n    runSetters({\n      ...state,\n      query: finalState.query,\n    });\n\n    // Update optimistically so that UI does not stutter\n    this.setState({\n      ...finalState,\n      queryError: null,\n    });\n\n    handleVizStateChange(finalState);\n\n    const shouldFetchDryRun = !equals(\n      pick(['measures', 'dimensions', 'timeDimensions'], stateQuery),\n      pick(['measures', 'dimensions', 'timeDimensions'], finalState.query)\n    );\n\n    if (shouldFetchDryRun && isQueryPresent(finalState.query) && finalState.missingMembers.length === 0) {\n      try {\n        const response = await this.cubeApi().dryRun(finalState.query, {\n          mutexObj: this.mutexObj,\n        });\n\n        if (finalState.shouldApplyHeuristicOrder) {\n          finalState.query.order = (response.queryOrder || []).reduce((memo, current) => ({ ...memo, ...current }), {});\n        }\n\n        finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(response.pivotQuery, finalState.pivotConfig);\n        finalState.validatedQuery = this.validatedQuery(finalState);\n        finalState.dryRunResponse = response;\n\n        // deprecated\n        if (isQueryPresent(stateQuery)) {\n          runSetters({\n            ...this.state,\n            ...finalState,\n          });\n        }\n      } catch (error) {\n        this.setState({\n          queryError: new Error(error.response?.plainError || error.message),\n          richQueryError: new Error(error.message || error.toString())\n        });\n      }\n    }\n\n    this.setState(finalState, () => handleVizStateChange(this.state));\n  }\n\n  validatedQuery(state) {\n    const { query } = state || this.state;\n\n    return validateQuery(query);\n  }\n\n  defaultHeuristics(newState) {\n    const { query, sessionGranularity, meta } = this.state;\n\n    return defaultHeuristics(newState, query, {\n      meta,\n      sessionGranularity: sessionGranularity || 'day',\n    });\n  }\n\n  applyStateChangeHeuristics(newState) {\n    const { stateChangeHeuristics, disableHeuristics } = this.props;\n    if (disableHeuristics) {\n      return newState;\n    }\n    return (stateChangeHeuristics && stateChangeHeuristics(this.state, newState)) || this.defaultHeuristics(newState);\n  }\n\n  render() {\n    const { query } = this.state;\n    const { cubeApi, render, wrapWithQueryRenderer } = this.props;\n\n    if (wrapWithQueryRenderer) {\n      return (\n        <QueryRenderer\n          query={query}\n          cubeApi={cubeApi}\n          resetResultSetOnChange={false}\n          render={(queryRendererProps) => {\n            if (render) {\n              return render(this.prepareRenderProps(queryRendererProps));\n            }\n            return null;\n          }}\n        />\n      );\n    } else {\n      if (render) {\n        return render(this.prepareRenderProps());\n      }\n      return null;\n    }\n  }\n}\n","import React from 'react';\nimport CubeContext from './CubeContext';\n\nexport default function CubeProvider({ cubeApi, children, options = {} }) {\n  return (\n    <CubeContext.Provider value={{\n      cubeApi,\n      options\n    }}\n    >\n      {children}\n    </CubeContext.Provider>\n  );\n}\n","import { useRef } from 'react';\nimport { equals } from 'ramda';\n\nexport default function useDeepCompareMemoize(value) {\n  const ref = useRef([]);\n\n  if (!equals(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useIsMounted() {\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    isMounted.current = true;\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  return () => isMounted.current;\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\nimport { useIsMounted } from './is-mounted';\n\nexport function useCubeFetch(method, options = {}) {\n  const isMounted = useIsMounted();\n  const context = useContext(CubeContext);\n  const mutexRef = useRef({});\n\n  const [response, setResponse] = useState({\n    isLoading: false,\n    response: null,\n  });\n  const [error, setError] = useState(null);\n\n  const { skip = false } = options;\n\n  async function load(loadOptions = {}, ignoreSkip = false) {\n    const cubeApi = options.cubeApi || context?.cubeApi;\n    const query = loadOptions.query || options.query;\n\n    const queryCondition = method === 'meta' ? true : query && isQueryPresent(query);\n\n    if (cubeApi && (ignoreSkip || !skip) && queryCondition) {\n      setError(null);\n      setResponse({\n        isLoading: true,\n        response: null,\n      });\n\n      const coreOptions = {\n        mutexObj: mutexRef.current,\n        mutexKey: method,\n      };\n      const args = method === 'meta' ? [coreOptions] : [query, coreOptions];\n\n      try {\n        const response = await cubeApi[method](...args);\n\n        if (isMounted()) {\n          setResponse({\n            response,\n            isLoading: false,\n          });\n        }\n      } catch (error) {\n        if (isMounted()) {\n          setError(error);\n          setResponse({\n            isLoading: false,\n            response: null,\n          });\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    load();\n  }, useDeepCompareMemoize([Object.keys(options.query?.order || {}), options, context]));\n\n  return {\n    ...response,\n    error,\n    refetch: (options) => load(options, true),\n  };\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useCubeSql(query, options = {}) {\n  return useCubeFetch('sql', {\n    ...options,\n    query\n  });\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useDryRun(query, options = {}) {\n  return useCubeFetch('dryRun', {\n    ...options,\n    query,\n  });\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useLazyDryRun(query, options = {}) {\n  const { refetch, ...result } = useCubeFetch('dryRun', {\n    ...options,\n    query,\n    skip: true\n  });\n\n  return [refetch, result];\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent, areQueriesEqual } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\nimport { useIsMounted } from './is-mounted';\n\nexport function useCubeQuery(query, options = {}) {\n  const mutexRef = useRef({});\n  const isMounted = useIsMounted();\n  const [currentQuery, setCurrentQuery] = useState(null);\n  const [isLoading, setLoading] = useState(!options.skip);\n  const [resultSet, setResultSet] = useState(null);\n  const [progress, setProgress] = useState(null);\n  const [error, setError] = useState(null);\n  const context = useContext(CubeContext);\n\n  let subscribeRequest = null;\n\n  const progressCallback = ({ progressResponse }) => setProgress(progressResponse);\n\n  async function fetch() {\n    const { resetResultSetOnChange } = options;\n    const cubeApi = options.cubeApi || context?.cubeApi;\n\n    if (!cubeApi) {\n      throw new Error('Cube API client is not provided');\n    }\n\n    if (resetResultSetOnChange) {\n      setResultSet(null);\n    }\n\n    setError(null);\n    setLoading(true);\n\n    try {\n      const response = await cubeApi.load(query, {\n        mutexObj: mutexRef.current,\n        mutexKey: 'query',\n        progressCallback,\n        castNumerics: Boolean(typeof options.castNumerics === 'boolean' ? options.castNumerics : context?.options?.castNumerics)\n      });\n\n      if (isMounted()) {\n        setResultSet(response);\n        setProgress(null);\n      }\n    } catch (error) {\n      if (isMounted()) {\n        setError(error);\n        setResultSet(null);\n        setProgress(null);\n      }\n    }\n\n    if (isMounted()) {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    const { skip = false, resetResultSetOnChange } = options;\n\n    const cubeApi = options.cubeApi || context?.cubeApi;\n\n    if (!cubeApi) {\n      throw new Error('Cube API client is not provided');\n    }\n\n    async function loadQuery() {\n      if (!skip && isQueryPresent(query)) {\n        if (!areQueriesEqual(currentQuery, query)) {\n          if (resetResultSetOnChange == null || resetResultSetOnChange) {\n            setResultSet(null);\n          }\n          setCurrentQuery(query);\n        }\n\n        setError(null);\n        setLoading(true);\n\n        try {\n          if (subscribeRequest) {\n            await subscribeRequest.unsubscribe();\n            subscribeRequest = null;\n          }\n\n          if (options.subscribe) {\n            subscribeRequest = cubeApi.subscribe(\n              query,\n              {\n                mutexObj: mutexRef.current,\n                mutexKey: 'query',\n                progressCallback,\n              },\n              (e, result) => {\n                if (isMounted()) {\n                  if (e) {\n                    setError(e);\n                  } else {\n                    setResultSet(result);\n                  }\n                  setLoading(false);\n                  setProgress(null);\n                }\n              }\n            );\n          } else {\n            await fetch();\n          }\n        } catch (e) {\n          if (isMounted()) {\n            setError(e);\n            setResultSet(null);\n            setLoading(false);\n            setProgress(null);\n          }\n        }\n      }\n    }\n\n    loadQuery();\n\n    return () => {\n      if (subscribeRequest) {\n        subscribeRequest.unsubscribe();\n        subscribeRequest = null;\n      }\n    };\n  }, useDeepCompareMemoize([query, Object.keys((query && query.order) || {}), options, context]));\n\n  return {\n    isLoading,\n    resultSet,\n    error,\n    progress,\n    previousQuery: currentQuery,\n    refetch: fetch\n  };\n}\n","import { useCubeFetch } from './cube-fetch';\n\nexport function useCubeMeta(options = {}) {\n  return useCubeFetch('meta', options);\n}\n"],"names":["createContext","QueryRenderer","_React$Component","props","_this","_classCallCheck","_callSuper","state","mutexObj","_inherits","_createClass","key","value","componentDidMount","_this$props","query","queries","load","loadQueries","shouldComponentUpdate","nextProps","nextState","_this$props2","render","cubeApi","loadSql","updateOnlyOnStateChange","equals","componentDidUpdate","prevProps","_this$props3","context","_this2","resetResultSetOnChange","setState","_objectSpread","isLoading","error","sqlQuery","resultSet","isQueryPresent","sql","mutexKey","then","Promise","all","_ref","_ref2","_slicedToArray","_this3","resultPromises","toPairs","map","_ref3","_ref4","name","r","fromPairs","_error$response","_this$state","loadState","Error","response","plainError","message","toString","loadingState","React","Component","_defineProperty","CubeContext","QueryRendererWithTotals","restProps","_objectWithoutProperties","_excluded","createElement","_extends","totals","dimensions","timeDimensions","td","granularity","undefined","main","removeEmpty","obj","Array","isArray","_typeof","Object","fromEntries","entries","filter","v","k","granularities","title","QueryBuilder","_asyncToGenerator","_regeneratorRuntime","mark","_callee","meta","metaError","richMetaError","metaErrorStack","_error$response2","wrap","_callee$","_context","prev","next","abrupt","isFetchingMeta","sent","t0","stack","replace","updateQuery","stop","defaultQuery","chartType","defaultChartType","validatedQuery","missingMembers","dryRunResponse","vizState","initialVizState","orderMembersOrderKeys","_componentDidMount","_callee2","_callee2$","_context2","prevContext","fetchMeta","apply","arguments","_componentDidUpdate","_callee4","_this$prevContext","_this$context","schemaVersion","onSchemaChange","newMeta","_callee4$","_context4","refresh","_refresh","_callee3","_callee3$","_context3","_x","getMissingMembers","getQueryMembers","member","resolvedMember","resolveMember","Boolean","prepareRenderProps","queryRendererProps","getName","toTimeDimension","rangeSelection","compareDateRange","dateRange","dimension","toFilter","_member$member","_member$dimension","operator","includes","values","updateMethods","memberType","toQuery","length","add","concat","remove","_","index","update","updateWith","members","splice","queryError","pivotConfig","flatFilters","uniqBy","prop","flattenFilters","filters","m","i","operators","filterOperatorsForMember","measures","segments","availableMeasures","availableDimensions","availableSegments","availableFilterMembers","availableMembers","membersGroupedByCube","membersForQuery","indexedMeasures","indexBy","indexedDimensions","cubeNames","uniq","_toConsumableArray","keys","sort","_indexedMeasures$name","_indexedDimensions$na","cube","a","b","shortTitle","activeOrder","order","orderMembers","id","find","availableTimeDimensions","type","queryUpdate","updateMeasures","updateDimensions","updateSegments","updateTimeDimensions","updateFilters","updateChartType","newChartType","updateVizState","updateOrder","set","memberId","newOrder","orderMember","reduce","acc","_ref5","reorder","sourceIndex","destinationIndex","nextArray","moveItemInArray","_ref6","_ref7","updatePivotConfig","moveItem","_ref8","sourceAxis","destinationAxis","movePivotItem","config","limit","removeEmptyQueryFields","_updateVizState","_callee5","_this4","setQuery","setVizState","_this$state2","stateQuery","statePivotConfig","finalState","vizStateSent","handleVizStateChange","runSetters","shouldFetchDryRun","_error$response3","_callee5$","_context5","applyStateChangeHeuristics","currentState","onVizStateChanged","newVizState","pick","clone","shouldApplyHeuristicOrder","defaultOrder","ResultSet","getNormalizedPivotConfig","dryRun","queryOrder","memo","current","pivotQuery","richQueryError","_x2","_ref9","validateQuery","defaultHeuristics","newState","_this$state3","sessionGranularity","stateChangeHeuristics","disableHeuristics","_this5","_this$props4","wrapWithQueryRenderer","getDerivedStateFromProps","_ref10","currentQuery","CubeProvider","children","_ref$options","options","Provider","useDeepCompareMemoize","ref","useRef","useIsMounted","isMounted","useEffect","useCubeFetch","method","_options$query","useContext","mutexRef","_useState","useState","_useState2","setResponse","_useState3","_useState4","setError","_options$skip","skip","_load","loadOptions","ignoreSkip","queryCondition","coreOptions","args","_response","_args","refetch","useCubeSql","useDryRun","useLazyDryRun","_useCubeFetch","result","useCubeQuery","setCurrentQuery","setLoading","_useState5","_useState6","setResultSet","_useState7","_useState8","progress","setProgress","_useState9","_useState10","subscribeRequest","progressCallback","progressResponse","fetch","_fetch","_context$options","castNumerics","loadQuery","_loadQuery","areQueriesEqual","unsubscribe","subscribe","e","previousQuery","useCubeMeta"],"mappings":"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"}